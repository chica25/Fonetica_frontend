[{"/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/LanguageList.js":"1","/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/LikeButton.js":"2","/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/PhraseForm.js":"3","/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/PhrasesByLanguage.js":"4"},{"size":1671,"mtime":1614620296203,"results":"5","hashOfConfig":"6"},{"size":382,"mtime":1614621039990,"results":"7","hashOfConfig":"6"},{"size":1738,"mtime":1614620381672,"results":"8","hashOfConfig":"6"},{"size":624,"mtime":1614620391015,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1pw0jvn",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/LanguageList.js",["19"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchLanguagePhrases, selectLanguage, fetchLanguages} from '../actions/actionsCreator.js';\nimport { Link } from 'react-router-dom';\nimport language_page_img from '../images/language_page_img.png';\n\n\n    class LanguageList extends React.Component {\n\n\n        handleClick = (e) => {     \n            this.props.fetchLanguagePhrases(e.target.id)\n            this.props.selectLanguage(e.target.id)\n        }\n\n        render(){\n            const languages = this.props.languages.map((lang, i) => \n                <div key={i}> <h4>{lang.language_name}</h4>\n                    <Link to={`/languages/phrases/${lang.language_name}`}>\n                        <button className=\"lang-list-btn\" onClick={this.handleClick}>\n                            <img src={lang.flag_image} id={lang.id} alt=\"all languages\" width={80} height={60} mode='fit'/>     \n                        </button>\n                    </Link>\n                    <br/>\n                </div>)\n            return(\n                <div>\n                    <h3 className=\"languages-title\">ALL LANGUAGES</h3>\n                    <img className=\"languages-page-img\" src={language_page_img} alt=\"image\"></img>\n                    <div className=\"language-name\">{languages}</div> \n                </div>\n               \n            )\n        }\n    }\n\n    const mapStateToProps = (state) => { \n        return {\n            languages: state.languages,\n            selectedLanguage: state.selectedLanguage\n        }\n    \n    }\n\n\nexport default connect(mapStateToProps, { fetchLanguagePhrases, selectLanguage, fetchLanguages })(LanguageList);\n\n\n","/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/LikeButton.js",[],"/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/PhraseForm.js",[],"/Users/patriciacordero/Desktop/Flatiron_school_files/final_project/fonetica_frontend/src/components/PhrasesByLanguage.js",[],{"ruleId":"20","severity":1,"message":"21","line":29,"column":21,"nodeType":"22","endLine":29,"endColumn":93},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]